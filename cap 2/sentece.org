#+Title: Chapter 2

* Chapter 2.2

- First sentece defined on chapter 2.2

#+BEGIN_SRC lisp
(defun sentece () (append (noun-phrase) (verb-phrase)))

(defun noun-phrase () (append (Article) (Noun)))

(defun verb-phrase () (append (Verb) (noun-phrase)))

(defun Article () (one-of '(the a)))

(defun Noun () (one-of '(man ball woman table)))

(defun Verb () (one-of  '(hit took saw liked)))

(defun one-of (set)
  (list (random-elt set)))

(defun random-elt (choices)
  (elt choices (random (length choices))))


#+END_SRC

- Second noun-phrase  defined on chapter 2.2
  
#+BEGIN_SRC lisp
(defun noun-phrase () (append (Article) (Adj*) (Noun) (PP*)))

(defun Adj* ()
	   (if (= (random 2) 0)
	       nil
	       (append (Adj) (Adj*))))

(defun PP* ()
	   (if (random-elt '(t nil))
	       (append (PP) (PP*))))

(defun PP () (append (Prep) (noun-phrase)))

(defun Adj () (one-of '(big little blue green adiabatic)))

(defun Prep () (one-of '(to in by with on)))

#+END_SRC


* Chapt`er 2.3

#+BEGIN_SRC lisp
(defparameter *simple-grammar*
  '((sentence -> (noun-phrase verb-phrase))
    (noun-phrase -> (Article Noun))
    (verb-phrase ->(Verbnoun-phrase))
    (Article -> the a)
    (Noun -> man ball woman table)
    (Verb -> hit took saw liked)))

(defvar *grammar* *simple-grammar*)

(defun mappend (fn the-list)
 (if (null the-list)
      nil
      (append (funcall fn (first the-list))
      (mappend fn (rest the-list)))))

(defun random-elt (choices)
  (elt choices (random (length choices))))

(defun rule-lhs (rule)
  (first rule))

(defun rule-rhs (rule)
  (rest (rest rule)))

(defun rewrites (category)
  (rule-rhs (assoc category *grammar*)))

(defun generate-1 (phrase)
 (cond ((listp phrase)
        (mappend 'generate-1 phrase))
        ((rewrites phrase)
         (generate-1 (random-elt (rewrites phrase))))
         ( t (list phrase))))

(defun generate-2 (phrase)
 (if (listp phrase)
      (mappend 'generate-2 phrase)
      (let ((choices (rewrites phrase)))
        (if (null choices)
            (list phrase)
            (generate-2 (random-elt choices))))))

#+End_Src


* Chapter 2.5

#+BEGIN_SRC lisp

(defparameter *bigger-grammar*
 '((sentence -> (noun-phrase verb-phrase))
   (noun-phrase -> ( A r t i c l e Adj* Noun PP*) (Name) (Pronoun))
   (verb-phrase -> (Verb noun-phrase PP*))
   (PP* -> 0 (PP PP*))
   (Adj* -> 0 (Adj Adj*))
   (PP -> (Prep noun-phrase))
   (Prep -> to in by with on)
   (Adj -> big l i t t l e blue green adiabatic)
   (Article -> the a)
   (Name -> Pat Kim Lee Terry Robin)
   (Noun -> man ball woman table)
   (Verb ->hit took saw 1iked)
   (Pronoun -> he she it these those that)))

(setf *grammar* *bigger-grammar*)

#+END_SRC



* 
